import { useState } from 'react'

import './input.scss'
interface InputProps{
    placeholder?: string,
    register?: any
    type?: string,
    hide?: boolean,
    setIsShow?:any,
    show?:boolean,
    children?:any,
    mess?:any,
    value?:string,
    onChange?:any
}
const input = ({placeholder,register,type,show,children,mess,value,onChange}:InputProps) =>{
    const [isShown,setIsShow] = useState(show);
    return(
        <div className={`custom__input max-w-[300px] w-full relative ${mess ? 'err' : ''}`}>
            <input {...register} value={value} onChange={e => onChange(e.target.value)} type={isShown ? "password" : type} className={`text-normal font-normal border-none bg-gray-1 text-black-3 focus:outline-none w-full pt-3 pb-3 px-4 `} placeholder={placeholder}/> 
            {children}
            {show ? 
            <div className="hide__icon absolute cursor-pointer" onClick={() => setIsShow(!isShown)}>
                {isShown ? 
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M3.19776 3.1974C3.08344 3.31169 3.01394 3.46321 3.00188 3.6244C2.98982 3.7856 3.03602 3.94577 3.13206 4.07579L3.19776 4.15139L6.82831 7.78284C5.05806 9.02359 3.79435 10.8608 3.26886 12.9578C3.22834 13.1304 3.25737 13.312 3.34968 13.4634C3.44199 13.6148 3.59016 13.7238 3.76217 13.7668C3.93418 13.8099 4.11622 13.7835 4.26894 13.6934C4.42166 13.6033 4.5328 13.4567 4.57834 13.2854C5.04534 11.4242 6.19553 9.80686 7.80029 8.75483L9.42927 10.3838C8.77857 11.0637 8.42001 11.9715 8.43039 12.9125C8.44077 13.8536 8.81927 14.7532 9.4848 15.4186C10.1503 16.084 11.05 16.4623 11.9911 16.4726C12.9321 16.4828 13.8398 16.124 14.5196 15.4732L19.8466 20.8012C19.9671 20.9219 20.1288 20.9926 20.2992 20.999C20.4696 21.0054 20.6362 20.9471 20.7654 20.8357C20.8945 20.7243 20.9768 20.5682 20.9955 20.3986C21.0142 20.2291 20.9681 20.0588 20.8663 19.9219L20.8006 19.8463L15.299 14.3437L15.2999 14.3419L14.2199 13.2638L11.6369 10.6808H11.6387L9.04677 8.09153L9.04767 8.08973L8.02799 7.07275L4.15174 3.1974C4.02518 3.071 3.85362 3 3.67475 3C3.49588 3 3.32432 3.071 3.19776 3.1974ZM10.3833 11.3378L13.5647 14.5201C13.1404 14.93 12.572 15.1568 11.9821 15.1517C11.3921 15.1465 10.8278 14.9099 10.4107 14.4927C9.9935 14.0756 9.75687 13.5113 9.75175 12.9213C9.74662 12.3314 9.97341 11.7621 10.3833 11.3378ZM11.9996 6.14936C11.0996 6.14936 10.2267 6.28256 9.39957 6.53186L10.5129 7.64424C12.4384 7.26297 14.4369 7.63622 16.095 8.68681C17.7532 9.73741 18.9442 11.385 19.4218 13.289C19.4685 13.459 19.5798 13.604 19.7319 13.6931C19.8841 13.7821 20.0651 13.808 20.2362 13.7654C20.4072 13.7227 20.5548 13.6148 20.6474 13.4647C20.7399 13.3146 20.77 13.1343 20.7313 12.9623C20.2433 11.016 19.119 9.28857 17.5371 8.05425C15.9551 6.81993 14.0061 6.14948 11.9996 6.14936ZM12.1751 9.30832L15.596 12.7283C15.5517 11.8354 15.1771 10.9909 14.5449 10.3588C13.9127 9.72675 13.068 9.35233 12.1751 9.30832Z" fill="#7E7E7E"/>
                    </svg>     
                    :   
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M12.0304 9.89418C12.9064 9.89418 13.7465 10.2422 14.366 10.8616C14.9854 11.481 15.3334 12.3211 15.3334 13.1971C15.3334 14.0731 14.9854 14.9132 14.366 15.5326C13.7465 16.152 12.9064 16.5 12.0304 16.5C11.1545 16.5 10.3143 16.152 9.69493 15.5326C9.07551 14.9132 8.72753 14.0731 8.72753 13.1971C8.72753 12.3211 9.07551 11.481 9.69493 10.8616C10.3143 10.2422 11.1545 9.89418 12.0304 9.89418ZM12.0304 11.1328C11.4829 11.1328 10.9579 11.3503 10.5707 11.7374C10.1836 12.1245 9.96612 12.6496 9.96612 13.1971C9.96612 13.7446 10.1836 14.2696 10.5707 14.6568C10.9579 15.0439 11.4829 15.2614 12.0304 15.2614C12.5779 15.2614 13.103 15.0439 13.4901 14.6568C13.8773 14.2696 14.0948 13.7446 14.0948 13.1971C14.0948 12.6496 13.8773 12.1245 13.4901 11.7374C13.103 11.3503 12.5779 11.1328 12.0304 11.1328ZM12.0304 7C15.8395 7 19.1284 9.60104 20.0408 13.2458C20.0808 13.4051 20.0558 13.5738 19.9714 13.7147C19.887 13.8556 19.7501 13.9573 19.5908 13.9972C19.4315 14.0372 19.2628 14.0122 19.1219 13.9278C18.981 13.8434 18.8794 13.7065 18.8394 13.5472C18.4571 12.0307 17.5795 10.6853 16.3457 9.72419C15.112 8.7631 13.5927 8.24138 12.0287 8.24176C10.4648 8.24214 8.94578 8.76459 7.71248 9.72628C6.47919 10.688 5.60223 12.0338 5.22066 13.5505C5.20098 13.6294 5.16594 13.7037 5.11755 13.7691C5.06916 13.8345 5.00836 13.8898 4.93862 13.9317C4.86888 13.9736 4.79158 14.0013 4.71111 14.0134C4.63065 14.0254 4.5486 14.0214 4.46966 14.0018C4.39072 13.9821 4.31643 13.947 4.25103 13.8987C4.18563 13.8503 4.1304 13.7895 4.08849 13.7197C4.04659 13.65 4.01883 13.5727 4.00681 13.4922C3.99478 13.4117 3.99872 13.3297 4.0184 13.2508C4.46621 11.465 5.49782 9.87995 6.94941 8.74746C8.401 7.61497 10.1893 6.99993 12.0304 7Z" fill="#7E7E7E"/>
                    </svg>     
                }            
            </div>
            : null}          
        </div>
    )
}
export default input